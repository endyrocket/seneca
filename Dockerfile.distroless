# Multi-stage build for minimal attack surface
# Stage 1: Build stage with full OS
FROM python:3.11-slim as builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apt-get update \
    && apt-get upgrade -y \
    && apt-get install -y --no-install-recommends \
        gcc \
        libc6-dev \
        libffi-dev \
        libssl-dev \
    && apt-get autoremove -y \
    && apt-get autoclean \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip setuptools wheel \
    && pip install --no-cache-dir --user -r requirements.txt

# Stage 2: Distroless runtime stage
FROM gcr.io/distroless/python3-debian12:nonroot

# Copy Python dependencies from builder stage
COPY --from=builder /root/.local /home/nonroot/.local

# Copy application code
COPY main.py /app/main.py

# Set working directory
WORKDIR /app

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONHASHSEED=random
ENV PATH=/home/nonroot/.local/bin:$PATH
ENV PYTHONPATH=/home/nonroot/.local/lib/python3.11/site-packages

# Expose the port the app runs on
EXPOSE 5001

# Run the application
CMD ["python", "main.py", "--port", "5001"] 